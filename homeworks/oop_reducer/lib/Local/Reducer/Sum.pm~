package Local::Reducer::Sum;
use parent "Local::Reducer";

use Scalar::Util "looks_like_number";
use strict;
use warnings;
use DDP;
=encoding utf8
=head1 NAME
Local::Reducer::Sum
=head1 VERSION
Version 1.00
=cut

our $VERSION = '1.00';

=head1 SYNOPSIS
* `Local::Reducer::Sum` — суммирует значение поля, указанного в параметре `field` конструктора, каждой строки лога. В случае, если соответствующее поле не содержит числовое значение, строка игнорируется.

my $reducer = Local::Reducer::Sum->new(
	field => 'price',
	source => Local::Source::Array->new(array => [
		'{"price": 1}',
		'{"price": 2}',
		'{"price": 3}',
	]),
	row_class => 'Local::Row::JSON',
	initial_value => 0,
);
=cut

sub new {
	my ($self, %args) = @_;
	unless (exists $args{'field'}) {
		die "field doesn't exist";
	}
	if (ref $args{'field'}) {
		die "field is not scalar";
	}
	$self = $self->SUPER::new(%args);
	$self->{field} = $args{field};
	return $self;
}

sub reduce {
	my $self = shift;
	my $row = $self->{source}->next;
	p $row;
	if ($row) {
		if ( $row = $self->{row_class}->new(str => $row) ) {
			if ( looks_like_number($row->get($self->{field}, 0)) ) {
				$self->{reduced} += $row->get($self->{field}, 0);
			}
		}
		else { return undef };
	}
	else { return undef }
}


